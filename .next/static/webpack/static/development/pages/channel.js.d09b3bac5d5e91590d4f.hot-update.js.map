{"version":3,"file":"static/webpack/static/development/pages/channel.js.d09b3bac5d5e91590d4f.hot-update.js","sources":["webpack:///./pages/channel.js"],"sourcesContent":["import Error from './_error'\nimport Layout from '../components/Layout'\nimport ChannelTitle from '../components/ChannelTitle'\nimport ChannelGrid from '../components/ChannelGrid'\nimport PodcastList from '../components/PodcastList'\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { openPodcast: null }\n  }\n\n  static async getInitialProps({ query, res }) {\n    try {\n      let idChannel = query.id\n      let [reqChannel, reqAudio, reqSeries] = await Promise.all([\n        fetch(`https://api.audioboom.com/channels/${idChannel}`),\n        fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`),\n        fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`)\n      ])\n\n      if(reqChannel.status >= 400) {\n        res.statusCode = reqChannel.status\n        return { \n          channel: null, \n          audioClips: null, \n          series: null,\n          statusCode: reqChannel.status\n        }\n      }\n  \n      let { body: { channel } } = await reqChannel.json()\n      let { body: { audio_clips: audioClips } } = await reqAudio.json()\n      let { body: { channels: series } } = await reqSeries.json()    \n  \n      return { channel, audioClips, series, statusCode: 200 }\n    } catch(e) {\n      return { \n        channel: null, \n        audioClips: null, \n        series: null,\n        statusCode: 503\n      }\n    }\n  }\n\n  openPodcast = (event, podcast) => {\n    event.preventDefault()\n    this.setState({\n      openPodcast: podcast\n    })\n  }\n\n  render() {\n    const  { channel, audioClips, series, statusCode } = this.props\n    const { openPodcast } = this.state\n\n    if(statusCode !== 200) {\n      return <Error statusCode={ statusCode } />\n    }\n\n    return <Layout title={ `Podcast | ${channel.title}` } >\n      <ChannelTitle channel = { channel } />\n      { openPodcast && <div>hola ignacio</div>}\n      {series.length > 0 &&\n        <ChannelGrid channels = {series} /> \n      }\n    \n      <PodcastList audioClips={ audioClips } onClickPodcast={openPodcast} />\n    </Layout>\n  }\n\n  \n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAwCA;AACA;AAAA;AACA;AADA;AAGA;AACA;AA3CA;AAAA;AAAA;AAFA;AAGA;AACA;;;AA0CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AAAA;AAAA;AAEA;;;;;;;;;;;;;AA1DA;;AAEA;;AACA;AACA;;;;AADA;AAAA;AAAA;AACA;AAKA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;;;AAOA;AACA;;;AADA;;AACA;AACA;;;AADA;;AACA;AACA;;;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;;;;;;;;;;;;;;;;;;AAhCA;AACA;;;;;A","sourceRoot":""}