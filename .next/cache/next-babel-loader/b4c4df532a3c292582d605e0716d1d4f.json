{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/fernando/Documentos/Platzi/Next.js/podcast/pages/podcast.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\n\nvar _default =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_default).apply(this, arguments));\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var clip = this.props.clip;\n      return __jsx(React.Fragment, null, __jsx(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Podcast\"), __jsx(\"div\", {\n        className: \"modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"clip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, __jsx(\"nav\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, __jsx(Link, {\n        href: \"/channel?id=\".concat(clip.channel.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        className: \"close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"< Volver\"))), __jsx(\"picture\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        style: {\n          backgroundImage: \"url(\".concat(clip.urls.image || clip.channel.urls.logo_image.original, \")\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"player\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, __jsx(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, clip.title), __jsx(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, clip.channel.title), __jsx(\"audio\", {\n        controls: true,\n        autoPlay: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, __jsx(\"source\", {\n        src: clip.urls.high_mp3,\n        type: \"audio/mpeg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }))))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var query, idPodcast, reqPodcast, _ref2, clip;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                query = _ref.query;\n                idPodcast = query.id;\n                _context.next = 4;\n                return fetch(\"https://api.audioboom.com/audio_clips/\".concat(idPodcast, \".mp3\"));\n\n              case 4:\n                reqPodcast = _context.sent;\n                _context.next = 7;\n                return reqPodcast.json();\n\n              case 7:\n                _ref2 = _context.sent;\n                clip = _ref2.body.audio_clip;\n                return _context.abrupt(\"return\", {\n                  clip: clip\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/home/fernando/Documentos/Platzi/Next.js/podcast/pages/podcast.js"],"names":["Link","clip","props","channel","id","backgroundImage","urls","image","logo_image","original","title","high_mp3","query","idPodcast","fetch","reqPodcast","json","body","audio_clip","React","Component"],"mappings":";;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;;;;;;;;;;;;;;;6BAYU;AAAA,UACFC,IADE,GACO,KAAKC,KADZ,CACFD,IADE;AAGR,aAAO,4BACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADM,EAIN;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,MAAC,IAAD;AAAM,QAAA,IAAI,wBAAiBA,IAAI,CAACE,OAAL,CAAaC,EAA9B,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,CADD,CADD,EASC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,eAAe,gBAASJ,IAAI,CAACK,IAAL,CAAUC,KAAV,IACrCN,IAAI,CAACE,OAAL,CAAaG,IAAb,CAAkBE,UAAlB,CAA6BC,QADD;AAAjB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CATD,EAaC;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMR,IAAI,CAACS,KAAX,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMT,IAAI,CAACE,OAAL,CAAaO,KAAnB,CAFF,EAGE;AAAO,QAAA,QAAQ,MAAf;AAAgB,QAAA,QAAQ,EAAE,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAQ,QAAA,GAAG,EAAET,IAAI,CAACK,IAAL,CAAUK,QAAvB;AAAiC,QAAA,IAAI,EAAC,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CAHF,CAbD,CADD,CAJM,CAAP;AA6BA;;;;;;;;;;;;;AAzC8BC,gBAAAA,K,QAAAA,K;AAC1BC,gBAAAA,S,GAAYD,KAAK,CAACR,E;;uBAECU,KAAK,iDAA0CD,SAA1C,U;;;AAAxBE,gBAAAA,U;;uBACsCA,UAAU,CAACC,IAAX,E;;;;AAAhBf,gBAAAA,I,SAApBgB,I,CAAQC,U;iDAEP;AAAEjB,kBAAAA,IAAI,EAAJA;AAAF,iB;;;;;;;;;;;;;;;;;;;EAPoBkB,KAAK,CAACC,S","sourcesContent":["import Link from 'next/link'\n\nexport default class extends React.Component {\n\tstatic async getInitialProps({ query }) {\n\t\tlet idPodcast = query.id\n\n\t\tlet reqPodcast = await fetch(`https://api.audioboom.com/audio_clips/${idPodcast}.mp3`)\n\t\tlet { body: { audio_clip: clip }} = await reqPodcast.json()\n\n\t\treturn { clip }\n\t}\n\n\trender() {\n\t\tlet { clip } = this.props\n\n\t\treturn <>\n\t\t\t<header>Podcast</header>\n\t\t\t{/* <div>{ clip.title }</div> */}\n\n\t\t\t<div className='modal'>\t\t\t\t\n\t\t\t\t<div className='clip'>\n\t\t\t\t\t<nav>\n\t\t\t\t\t\t<Link href={`/channel?id=${clip.channel.id}`}>\n\t\t\t\t\t\t\t<a className='close'>\n\t\t\t\t\t\t\t\t&lt; Volver\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</nav>\n\n\t\t\t\t\t<picture>\n\t\t\t\t\t\t<div style={{ backgroundImage: `url(${clip.urls.image || \n\t\t\t\t\t\t\tclip.channel.urls.logo_image.original})` }} />\n\t\t\t\t\t</picture>\n\t\t\t\t\t<div className='player'>\n\t\t\t\t\t\t\t<h3>{ clip.title }</h3>\n\t\t\t\t\t\t\t<h6>{ clip.channel.title }</h6>\n\t\t\t\t\t\t\t<audio controls autoPlay={true}>\n\t\t\t\t\t\t\t\t<source src={clip.urls.high_mp3} type='audio/mpeg' />\n\t\t\t\t\t\t\t</audio>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t</>\n\t} \n}"]},"metadata":{},"sourceType":"module"}