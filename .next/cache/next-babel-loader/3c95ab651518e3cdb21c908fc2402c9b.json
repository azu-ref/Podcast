{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar _jsxFileName = \"/home/fernando/Documentos/Platzi/Next.js/podcast/pages/channel.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Layout from '../components/Layout';\nimport ChannelTitle from '../components/ChannelTitle';\nimport ChannelGrid from '../components/ChannelGrid';\nimport PodcastList from '../components/PodcastList';\nexport default class extends React.Component {\n  static async getInitialProps({\n    query\n  }) {\n    let idChannel = query.id;\n    let [reqChannel, reqAudio, reqSeries] = await _Promise.all([fetch(`https://api.audioboom.com/channels/${idChannel}`), fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`), fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`)]);\n    let {\n      body: {\n        channel\n      }\n    } = await reqChannel.json();\n    let {\n      body: {\n        audio_clips: audioClips\n      }\n    } = await reqAudio.json();\n    let {\n      body: {\n        channels: series\n      }\n    } = await reqSeries.json();\n    return {\n      channel,\n      audioClips,\n      series\n    };\n  }\n\n  render() {\n    const {\n      channel,\n      audioClips,\n      series\n    } = this.props;\n    return __jsx(Layout, {\n      title: `Podcast | ${channel.title}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, __jsx(ChannelTitle, {\n      channel: channel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), series.length > 0 && __jsx(ChannelGrid, {\n      channels: series,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), __jsx(PodcastList, {\n      audioClips: audioClips,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/fernando/Documentos/Platzi/Next.js/podcast/pages/channel.js"],"names":["Link","Layout","ChannelTitle","ChannelGrid","PodcastList","React","Component","getInitialProps","query","idChannel","id","reqChannel","reqAudio","reqSeries","all","fetch","body","channel","json","audio_clips","audioClips","channels","series","render","props","title","length"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,eAAe,cAAcC,KAAK,CAACC,SAApB,CAA8B;AAE3C,eAAaC,eAAb,CAA6B;AAAEC,IAAAA;AAAF,GAA7B,EAAwC;AACtC,QAAIC,SAAS,GAAGD,KAAK,CAACE,EAAtB;AAEA,QAAI,CAACC,UAAD,EAAaC,QAAb,EAAuBC,SAAvB,IAAoC,MAAM,SAAQC,GAAR,CAAY,CACxDC,KAAK,CAAE,sCAAqCN,SAAU,EAAjD,CADmD,EAExDM,KAAK,CAAE,sCAAqCN,SAAU,cAAjD,CAFmD,EAGxDM,KAAK,CAAE,sCAAqCN,SAAU,iBAAjD,CAHmD,CAAZ,CAA9C;AAMA,QAAI;AAAEO,MAAAA,IAAI,EAAE;AAAEC,QAAAA;AAAF;AAAR,QAAwB,MAAMN,UAAU,CAACO,IAAX,EAAlC;AACA,QAAI;AAAEF,MAAAA,IAAI,EAAE;AAAEG,QAAAA,WAAW,EAAEC;AAAf;AAAR,QAAwC,MAAMR,QAAQ,CAACM,IAAT,EAAlD;AACA,QAAI;AAAEF,MAAAA,IAAI,EAAE;AAAEK,QAAAA,QAAQ,EAAEC;AAAZ;AAAR,QAAiC,MAAMT,SAAS,CAACK,IAAV,EAA3C;AAEA,WAAO;AAAED,MAAAA,OAAF;AAAWG,MAAAA,UAAX;AAAuBE,MAAAA;AAAvB,KAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAO;AAAEN,MAAAA,OAAF;AAAWG,MAAAA,UAAX;AAAuBE,MAAAA;AAAvB,QAAkC,KAAKE,KAA9C;AAEA,WAAO,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAI,aAAYP,OAAO,CAACQ,KAAM,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL,MAAC,YAAD;AAAc,MAAA,OAAO,EAAKR,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,EAGJK,MAAM,CAACI,MAAP,GAAgB,CAAhB,IACC,MAAC,WAAD;AAAa,MAAA,QAAQ,EAAIJ,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJG,EAOL,MAAC,WAAD;AAAa,MAAA,UAAU,EAAGF,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPK,CAAP;AASD;;AA9B0C","sourcesContent":["import Link from 'next/link'\nimport Layout from '../components/Layout'\nimport ChannelTitle from '../components/ChannelTitle'\nimport ChannelGrid from '../components/ChannelGrid'\nimport PodcastList from '../components/PodcastList'\n\nexport default class extends React.Component {\n\n  static async getInitialProps({ query }) {\n    let idChannel = query.id\n\n    let [reqChannel, reqAudio, reqSeries] = await Promise.all([\n      fetch(`https://api.audioboom.com/channels/${idChannel}`),\n      fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`),\n      fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`)\n    ])\n\n    let { body: { channel } } = await reqChannel.json()\n    let { body: { audio_clips: audioClips } } = await reqAudio.json()\n    let { body: { channels: series } } = await reqSeries.json()    \n\n    return { channel, audioClips, series }\n  }\n\n  render() {\n    const  { channel, audioClips, series } = this.props\n\n    return <Layout title={ `Podcast | ${channel.title}` } >\n      <ChannelTitle channel = { channel } />\n\n      {series.length > 0 &&\n        <ChannelGrid channels = {series} /> \n      }\n    \n      <PodcastList audioClips={ audioClips } />\n    </Layout>\n  }\n\n  \n}"]},"metadata":{},"sourceType":"module"}