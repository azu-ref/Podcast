{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/fernando/Documentos/Platzi/Next.js/podcast/pages/channel.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Layout from '../components/Layout';\nimport ChannelTitle from '../components/ChannelTitle';\nimport ChannelGrid from '../components/ChannelGrid';\nimport PodcastList from '../components/PodcastList';\n\nvar _default =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_default).apply(this, arguments));\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          channel = _this$props.channel,\n          audioClips = _this$props.audioClips,\n          series = _this$props.series;\n      return __jsx(Layout, {\n        title: \"Podcast | \".concat(channel.title),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, __jsx(ChannelTitle, {\n        channel: channel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), series.length > 0 && __jsx(ChannelGrid, {\n        channels: series,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), __jsx(PodcastList, {\n        audioClips: audioClips,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var query, idChannel, _ref2, _ref3, reqChannel, reqAudio, reqSeries, _ref4, channel, _ref5, audioClips, _ref6, series;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                query = _ref.query;\n                idChannel = query.id;\n                _context.next = 4;\n                return _Promise.all([fetch(\"https://api.audioboom.com/channels/\".concat(idChannel)), fetch(\"https://api.audioboom.com/channels/\".concat(idChannel, \"/audio_clips\")), fetch(\"https://api.audioboom.com/channels/\".concat(idChannel, \"/child_channels\"))]);\n\n              case 4:\n                _ref2 = _context.sent;\n                _ref3 = _slicedToArray(_ref2, 3);\n                reqChannel = _ref3[0];\n                reqAudio = _ref3[1];\n                reqSeries = _ref3[2];\n                _context.next = 11;\n                return reqChannel.json();\n\n              case 11:\n                _ref4 = _context.sent;\n                channel = _ref4.body.channel;\n                _context.next = 15;\n                return reqAudio.json();\n\n              case 15:\n                _ref5 = _context.sent;\n                audioClips = _ref5.body.audio_clips;\n                _context.next = 19;\n                return reqSeries.json();\n\n              case 19:\n                _ref6 = _context.sent;\n                series = _ref6.body.channels;\n                return _context.abrupt(\"return\", {\n                  channel: channel,\n                  audioClips: audioClips,\n                  series: series\n                });\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/home/fernando/Documentos/Platzi/Next.js/podcast/pages/channel.js"],"names":["Link","Layout","ChannelTitle","ChannelGrid","PodcastList","props","channel","audioClips","series","title","length","query","idChannel","id","all","fetch","reqChannel","reqAudio","reqSeries","json","body","audio_clips","channels","React","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;;;;;;;;;;;;;;6BAoBW;AAAA,wBACkC,KAAKC,KADvC;AAAA,UACEC,OADF,eACEA,OADF;AAAA,UACWC,UADX,eACWA,UADX;AAAA,UACuBC,MADvB,eACuBA,MADvB;AAGP,aAAO,MAAC,MAAD;AAAQ,QAAA,KAAK,sBAAgBF,OAAO,CAACG,KAAxB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACL,MAAC,YAAD;AAAc,QAAA,OAAO,EAAKH,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,EAGJE,MAAM,CAACE,MAAP,GAAgB,CAAhB,IACC,MAAC,WAAD;AAAa,QAAA,QAAQ,EAAIF,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJG,EAOL,MAAC,WAAD;AAAa,QAAA,UAAU,EAAGD,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPK,CAAP;AASD;;;;;;;;;;;;;AA5B8BI,gBAAAA,K,QAAAA,K;AACzBC,gBAAAA,S,GAAYD,KAAK,CAACE,E;;uBAEwB,SAAQC,GAAR,CAAY,CACxDC,KAAK,8CAAuCH,SAAvC,EADmD,EAExDG,KAAK,8CAAuCH,SAAvC,kBAFmD,EAGxDG,KAAK,8CAAuCH,SAAvC,qBAHmD,CAAZ,C;;;;;AAAzCI,gBAAAA,U;AAAYC,gBAAAA,Q;AAAUC,gBAAAA,S;;uBAMOF,UAAU,CAACG,IAAX,E;;;;AAApBb,gBAAAA,O,SAARc,I,CAAQd,O;;uBACoCW,QAAQ,CAACE,IAAT,E;;;;AAAvBZ,gBAAAA,U,SAArBa,I,CAAQC,W;;uBAC6BH,SAAS,CAACC,IAAV,E;;;;AAAnBX,gBAAAA,M,SAAlBY,I,CAAQE,Q;iDAEP;AAAEhB,kBAAAA,OAAO,EAAPA,OAAF;AAAWC,kBAAAA,UAAU,EAAVA,UAAX;AAAuBC,kBAAAA,MAAM,EAANA;AAAvB,iB;;;;;;;;;;;;;;;;;;;EAfkBe,KAAK,CAACC,S","sourcesContent":["import Link from 'next/link'\nimport Layout from '../components/Layout'\nimport ChannelTitle from '../components/ChannelTitle'\nimport ChannelGrid from '../components/ChannelGrid'\nimport PodcastList from '../components/PodcastList'\n\nexport default class extends React.Component {\n\n  static async getInitialProps({ query }) {\n    let idChannel = query.id\n\n    let [reqChannel, reqAudio, reqSeries] = await Promise.all([\n      fetch(`https://api.audioboom.com/channels/${idChannel}`),\n      fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`),\n      fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`)\n    ])\n\n    let { body: { channel } } = await reqChannel.json()\n    let { body: { audio_clips: audioClips } } = await reqAudio.json()\n    let { body: { channels: series } } = await reqSeries.json()    \n\n    return { channel, audioClips, series }\n  }\n\n  render() {\n    const  { channel, audioClips, series } = this.props\n\n    return <Layout title={ `Podcast | ${channel.title}` } >\n      <ChannelTitle channel = { channel } />\n\n      {series.length > 0 &&\n        <ChannelGrid channels = {series} /> \n      }\n    \n      <PodcastList audioClips={ audioClips } />\n    </Layout>\n  }\n\n  \n}"]},"metadata":{},"sourceType":"module"}